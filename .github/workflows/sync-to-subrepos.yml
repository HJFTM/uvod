name: Sync to Subprojects

on:
  workflow_dispatch:      # Omogućava ručno pokretanje
  push:
    branches:
      - main

jobs:
  sync:
    runs-on: ubuntu-latest

    env:
      TARGET_REPOS: |
        bosna
        dubrovnik
        stupnik
        mjesta
        obitelji 
        zapisi
        izvori

    steps:
      - name: Checkout main repo
        uses: actions/checkout@v3

      - name: Set Git config
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

      - name: Install rsync
        run: sudo apt-get install -y rsync

      - name: Sync to subprojects
        run: |
          for REPO in $TARGET_REPOS; do
            echo "Syncing to REPO ? $REPO"
            echo "Syncing to target repo: $TARGET_REPOS"

            # Kloniraj target repozitorij
            git clone --depth=1 https://x-access-token:${{ secrets.PAT_TOKEN_SYNC }}@github.com/HJFTM/$REPO.git temp-$REPO

            # Sinkroniziraj sadržaj iz glavnog repozitorija u target
           # Sync uz include samo main.yml iz workflows
           rsync -av --delete \
             --exclude='gh-pages/' \
             --exclude='pdf/' \
             --exclude='.git' \
             --exclude='node_modules' \
             --filter='dir-merge,- .github/workflows/**' \
             --include='.github/' \
             --include='.github/workflows/' \
             --include='.github/workflows/main.yml' \
              --include='.github/workflows/generate-pdf.yml' \
             --include='hello-framework/***' \
             --exclude='*' \
             "$GITHUB_WORKSPACE/" "temp-$REPO/"

            # Uđi u target direktorij
            cd temp-$REPO

            # Instaliraj dependencies ako postoji package.json
            if [ -f package.json ]; then
              echo "Installing dependencies..."
              npm install
            fi

            # Commit i push
            git add .
            git commit -m "Sync from main repo on $(date)" || echo "No changes to commit"
            git push origin main

            # Vrati se i obriši privremeni folder
            cd ..
            rm -rf temp-$REPO
          done
